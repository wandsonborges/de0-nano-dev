#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'cycloneV_soc' in
 * file 'cycloneV_soc.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'modular_sgdma_dispatcher_0_CSR', class 'modular_sgdma_dispatcher'
 * The macros are prefixed with 'MODULAR_SGDMA_DISPATCHER_0_CSR_'.
 * The prefix is the slave descriptor.
 */
#define MODULAR_SGDMA_DISPATCHER_0_CSR_COMPONENT_TYPE modular_sgdma_dispatcher
#define MODULAR_SGDMA_DISPATCHER_0_CSR_COMPONENT_NAME modular_sgdma_dispatcher_0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_BASE 0x0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_SPAN 32
#define MODULAR_SGDMA_DISPATCHER_0_CSR_END 0x1f
#define MODULAR_SGDMA_DISPATCHER_0_CSR_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_BURST_WRAPPING_SUPPORT 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_DATA_FIFO_DEPTH 32
#define MODULAR_SGDMA_DISPATCHER_0_CSR_DATA_WIDTH 32
#define MODULAR_SGDMA_DISPATCHER_0_CSR_DESCRIPTOR_FIFO_DEPTH 8
#define MODULAR_SGDMA_DISPATCHER_0_CSR_ENHANCED_FEATURES 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_MAX_BURST_COUNT 2
#define MODULAR_SGDMA_DISPATCHER_0_CSR_MAX_BYTE 1024
#define MODULAR_SGDMA_DISPATCHER_0_CSR_MAX_STRIDE 1
#define MODULAR_SGDMA_DISPATCHER_0_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_RESPONSE_FIFO_DEPTH 16
#define MODULAR_SGDMA_DISPATCHER_0_CSR_RESPONSE_PORT 2
#define MODULAR_SGDMA_DISPATCHER_0_CSR_STRIDE_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'modular_sgdma_dispatcher_0_Descriptor_Slave', class 'modular_sgdma_dispatcher'
 * The macros are prefixed with 'MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_COMPONENT_TYPE modular_sgdma_dispatcher
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_COMPONENT_NAME modular_sgdma_dispatcher_0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_BASE 0x20
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_SPAN 16
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_END 0x2f
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 8
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_MAX_BYTE 1024
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_RESPONSE_FIFO_DEPTH 16
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'sw', class 'altera_avalon_pio'
 * The macros are prefixed with 'SW_'.
 * The prefix is the slave descriptor.
 */
#define SW_COMPONENT_TYPE altera_avalon_pio
#define SW_COMPONENT_NAME sw
#define SW_BASE 0x30
#define SW_SPAN 16
#define SW_END 0x3f
#define SW_BIT_CLEARING_EDGE_REGISTER 0
#define SW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SW_CAPTURE 0
#define SW_DATA_WIDTH 4
#define SW_DO_TEST_BENCH_WIRING 0
#define SW_DRIVEN_SIM_VALUE 0
#define SW_EDGE_TYPE NONE
#define SW_FREQ 50000000
#define SW_HAS_IN 1
#define SW_HAS_OUT 0
#define SW_HAS_TRI 0
#define SW_IRQ_TYPE NONE
#define SW_RESET_VALUE 0

/*
 * Macros for device 'led', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_'.
 * The prefix is the slave descriptor.
 */
#define LED_COMPONENT_TYPE altera_avalon_pio
#define LED_COMPONENT_NAME led
#define LED_BASE 0x40
#define LED_SPAN 16
#define LED_END 0x4f
#define LED_BIT_CLEARING_EDGE_REGISTER 0
#define LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_CAPTURE 0
#define LED_DATA_WIDTH 8
#define LED_DO_TEST_BENCH_WIRING 0
#define LED_DRIVEN_SIM_VALUE 0
#define LED_EDGE_TYPE NONE
#define LED_FREQ 50000000
#define LED_HAS_IN 0
#define LED_HAS_OUT 1
#define LED_HAS_TRI 0
#define LED_IRQ_TYPE NONE
#define LED_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_H_ */
